services:
  grafana:
    build: 
      context: ./grafana
      dockerfile: Dockerfile
    container_name: monitoring-grafana
    restart: unless-stopped
    user: "472"
    networks:
      - internal
    ports:
      - "2999:3000"
    env_file:
      - ./grafana/.env
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

  cadvisor:
    container_name: monitoring-cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    privileged: true
    networks:
      - internal
    expose:
      - 8080
    command:
      - '-housekeeping_interval=15s'
      - '-docker_only=true'
      - '-store_container_labels=false'
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro

  node-exporter:
    container_name: monitoring-node-exporter
    image: prom/node-exporter:latest
    restart: unless-stopped
    networks:
      - internal
    expose:
      - 9100
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: monitoring-prometheus
    restart: unless-stopped
    user: "nobody"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
    networks:
      - internal
    expose:
      - 9090
    volumes:
      - prometheus-data:/prometheus
    depends_on:
      - cadvisor
      - node-exporter

  loki:
    build:
      context: ./loki
      dockerfile: Dockerfile
    container_name: monitoring-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - internal
    expose:
      - 3100
    volumes:
      - loki-data:/loki

  promtail:
    build:
      context: ./promtail
      dockerfile: Dockerfile
    container_name: monitoring-promtail
    restart: unless-stopped
    user: "0:0"
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - promtail-data:/tmp
    depends_on:
      - loki

volumes:
  grafana-data:
  prometheus-data:
  loki-data:
  promtail-data:

networks:
  internal:
    driver: bridge
